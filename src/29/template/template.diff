diff --git a/src/impls.rs b/src/impls.rs
index 044e138..4c6130c 100644
--- a/src/impls.rs
+++ b/src/impls.rs
@@ -70,4 +70,15 @@ impl<T: Config> Pallet<T> {
 		Self::deposit_event(Event::<T>::PriceSet { owner: caller, kitty_id, new_price });
 		Ok(())
 	}
+
+	/* ðŸš§ TODO ðŸš§: Create a new internal function `do_buy_kitty`:
+		- Inputs to the function are:
+			- `buyer` which is `T::AccountId`.
+			- `kitty_id` which is `[u8; 32]`.
+			- `price` which is `BalanceOf<T>`.
+		- It returns `DispatchResult`.
+		- The internal logic, for now, should be:
+			- `Self::deposit_event` with `Event::<T>::Sold` and the appropriate params.
+			- Return `Ok(())`.
+	*/
 }
diff --git a/src/lib.rs b/src/lib.rs
index 003605d..1ad969f 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -57,6 +57,11 @@ pub mod pallet {
 		Created { owner: T::AccountId },
 		Transferred { from: T::AccountId, to: T::AccountId, kitty_id: [u8; 32] },
 		PriceSet { owner: T::AccountId, kitty_id: [u8; 32], new_price: Option<BalanceOf<T>> },
+		/* ðŸš§ TODO ðŸš§: Create a new `Event` called `Sold` with the following parameters:
+			- `buyer` which is `T::AccountId`.
+			- `kitty_id` which is `[u8; 32]`.
+			- `price` which is `BalanceOf<T>`.
+		*/
 	}
 
 	#[pallet::error]
@@ -97,5 +102,17 @@ pub mod pallet {
 			Self::do_set_price(who, kitty_id, new_price)?;
 			Ok(())
 		}
+
+		/* ðŸš§ TODO ðŸš§: Create a new callable function `buy_kitty`:
+			- Inputs to the function are:
+				- `origin` which is `OriginFor<T>`.
+				- `kitty_id` which is `[u8; 32]`.
+				- `max_price` which is `BalanceOf<T>`.
+			- It returns `DispatchResult`.
+			- The internal logic should be:
+				- Extract `who` using `ensure_signed` on `origin`.
+				- Call `Self::do_buy_kitty` using appropriate params, and propagating the result.
+				- Return `Ok(())`.
+		*/
 	}
 }
