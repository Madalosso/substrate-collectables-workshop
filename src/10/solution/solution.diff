diff --git a/src/lib.rs b/src/lib.rs
index 3b445c2..446ce3c 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -22,8 +22,7 @@ pub mod pallet {
 
 	/// Learn about storage value.
 	#[pallet::storage]
-	/* TODO: Update this storage to use a `QueryKind` of `ValueQuery`. */
-	pub(super) type CountForKitties<T: Config> = StorageValue<Value = u64>;
+	pub(super) type CountForKitties<T: Config> = StorageValue<Value = u64, QueryKind = ValueQuery>;
 
 	// Learn about events.
 	#[pallet::event]
@@ -52,11 +51,9 @@ pub mod pallet {
 	impl<T: Config> Pallet<T> {
 		// Learn about `AccountId`.
 		fn mint(owner: T::AccountId) -> DispatchResult {
-			/* TODO: Remove the `unwrap_or` which is not needed when using `ValueQuery`. */
-			let current_count: u64 = CountForKitties::<T>::get().unwrap_or(0);
+			let current_count: u64 = CountForKitties::<T>::get();
 			let new_count = current_count.checked_add(1).ok_or(Error::<T>::TooManyKitties)?;
-			/* TODO: Remove the `Option` wrapper when setting the `new_count`. */
-			CountForKitties::<T>::set(Some(new_count));
+			CountForKitties::<T>::set(new_count);
 			Self::deposit_event(Event::<T>::Created { owner });
 			Ok(())
 		}
