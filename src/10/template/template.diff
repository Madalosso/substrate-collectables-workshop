diff --git a/src/impls.rs b/src/impls.rs
index d49f793..210e11d 100644
--- a/src/impls.rs
+++ b/src/impls.rs
@@ -3,6 +3,12 @@ use frame_support::pallet_prelude::*;
 
 impl<T: Config> Pallet<T> {
 	pub fn mint(owner: T::AccountId) -> DispatchResult {
+		/* ðŸš§ TODO ðŸš§:
+			- `get` the current count of kitties.
+			- `unwrap_or` set the count to `0`.
+			- increment the count by one.
+			- `set` the new count of kitties.
+		*/
 		Self::deposit_event(Event::<T>::Created { owner });
 		Ok(())
 	}
diff --git a/src/lib.rs b/src/lib.rs
index ef3b6da..b0c4af7 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -18,7 +18,6 @@ pub mod pallet {
 		type RuntimeEvent: From<Event<Self>> + IsType<<Self as frame_system::Config>::RuntimeEvent>;
 	}
 
-	/* ðŸš§ TODO ðŸš§: Learn about storage value. */
 	#[pallet::storage]
 	pub(super) type CountForKitties<T: Config> = StorageValue<Value = u64>;
 
