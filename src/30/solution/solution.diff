diff --git a/src/impls.rs b/src/impls.rs
index 415b4e7..4770d83 100644
--- a/src/impls.rs
+++ b/src/impls.rs
@@ -1,5 +1,5 @@
 use super::*;
-use frame_support::pallet_prelude::*;
+use frame_support::{pallet_prelude::*, traits::fungible::Mutate};
 
 // Learn about internal functions.
 impl<T: Config> Pallet<T> {
@@ -78,23 +78,15 @@ impl<T: Config> Pallet<T> {
 		kitty_id: [u8; 16],
 		price: BalanceOf<T>,
 	) -> DispatchResult {
-		/* TODO: Sanity check that the purchase is allowed:
-			- Get `kitty` from `Kitties` using `kitty_id`, `ok_or` return `Error::<T>::NoKitty`.
-			- Get the `real_price` from `kitty.price`, `ok_or` return `Error::<T>::NotForSale`.
-			- `ensure!` that `price` is greater or equal to `real_price`, else `Error::<T>::MaxPriceTooLow`.
-		*/
+		let kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;
+		let real_price = kitty.price.ok_or(Error::<T>::NotForSale)?;
+		ensure!(price >= real_price, Error::<T>::MaxPriceTooLow);
 
-		/* TODO: Execute the transfers:
-			- Import `use frame_support::traits::tokens::Preservation;`, which is used for balance transfer.
-			- Use `T::NativeBalance` to `transfer` from the `buyer` to the `kitty.owner`.
-				- The amount transferred should be the `real_price`.
-				- Use `Preservation::Preserve` to ensure the buyer account stays alive.
-			- Use `Self::do_transfer` to transfer from the `kitty.owner` to the `buyer` with `kitty_id`.
-			- Remember to propagate up all results from these functions with `?`.
-		*/
+		use frame_support::traits::tokens::Preservation;
+		T::NativeBalance::transfer(&buyer, &kitty.owner, real_price, Preservation::Preserve)?;
+		Self::do_transfer(kitty.owner, buyer.clone(), kitty_id)?;
 
-		/* TODO: Update the event to use the `real_price` in the `Event`. */
-		Self::deposit_event(Event::<T>::Sold { buyer, kitty_id, price });
+		Self::deposit_event(Event::<T>::Sold { buyer, kitty_id, price: real_price });
 		Ok(())
 	}
 }
diff --git a/src/lib.rs b/src/lib.rs
index 32d98e9..4a404e2 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -75,10 +75,8 @@ pub mod pallet {
 		TransferToSelf,
 		NoKitty,
 		NotOwner,
-		/* TODO: Add `Errors` needed for `do_buy_kitty`:
-			- `NotForSale`: for when the Kitty has a price set to `None`.
-			- `MaxPriceTooLow`: for when the price offered by the buyer is too low.
-		*/
+		NotForSale,
+		MaxPriceTooLow,
 	}
 
 	// Learn about callable functions and dispatch.
