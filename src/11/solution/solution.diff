diff --git a/src/impls.rs b/src/impls.rs
index ba4070f..9481d05 100644
--- a/src/impls.rs
+++ b/src/impls.rs
@@ -5,8 +5,7 @@ impl<T: Config> Pallet<T> {
 	// Learn about `AccountId`.
 	pub fn mint(owner: T::AccountId) -> DispatchResult {
 		let current_count: u64 = CountForKitties::<T>::get().unwrap_or(0);
-		/* TODO: Update this logic to use safe math. */
-		let new_count = current_count + 1;
+		let new_count = current_count.checked_add(1).ok_or(Error::<T>::TooManyKitties)?;
 		CountForKitties::<T>::set(Some(new_count));
 		Self::deposit_event(Event::<T>::Created { owner });
 		Ok(())
diff --git a/src/lib.rs b/src/lib.rs
index 110d15d..9ff62ff 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -35,9 +35,7 @@ pub mod pallet {
 
 	#[pallet::error]
 	pub enum Error<T> {
-		/* TODO:
-			- Introduce a new error `TooManyKitties`.
-		*/
+		TooManyKitties,
 	}
 
 	// Learn about callable functions and dispatch.
