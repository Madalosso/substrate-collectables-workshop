diff --git a/src/impls.rs b/src/impls.rs
index 3682da3..dc1b64a 100644
--- a/src/impls.rs
+++ b/src/impls.rs
@@ -3,10 +3,9 @@ use frame_support::pallet_prelude::*;
 
 impl<T: Config> Pallet<T> {
 	pub fn mint(owner: T::AccountId, dna: [u8; 32]) -> DispatchResult {
-		/* ðŸš§ TODO ðŸš§:
-			- `ensure!` that `Kitties` map does not `contains_key` for `dna`.
-			- If it does, return `Error::<T>::DuplicateKitty`.
-		*/
+		// Check if the kitty does not already exist in our storage map
+		ensure!(!Kitties::<T>::contains_key(dna), Error::<T>::DuplicateKitty);
+
 		let current_count: u64 = CountForKitties::<T>::get();
 		let new_count = current_count.checked_add(1).ok_or(Error::<T>::TooManyKitties)?;
 		Kitties::<T>::insert(dna, ());
diff --git a/src/lib.rs b/src/lib.rs
index 04200fc..e8a3cc5 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -33,7 +33,7 @@ pub mod pallet {
 	#[pallet::error]
 	pub enum Error<T> {
 		TooManyKitties,
-		/* ðŸš§ TODO ðŸš§: Create a new error `DuplicateKitty`. */
+		DuplicateKitty,
 	}
 
 	#[pallet::call]
