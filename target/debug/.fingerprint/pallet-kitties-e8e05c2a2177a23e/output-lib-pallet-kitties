{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Encode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":4247,"byte_end":4326,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet(dev_mode)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Decode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":5647,"byte_end":5726,"line_start":175,"line_end":175,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet(dev_mode)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Encode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":4247,"byte_end":4326,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet(dev_mode)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Decode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":5647,"byte_end":5726,"line_start":175,"line_end":175,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet(dev_mode)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Encode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":4247,"byte_end":4326,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet(dev_mode)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":64,"byte_end":98,"line_start":5,"line_end":5,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"#[frame_support::pallet(dev_mode)]","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Decode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":5647,"byte_end":5726,"line_start":175,"line_end":175,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet(dev_mode)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":818,"byte_end":824,"line_start":33,"line_end":33,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":818,"byte_end":824,"line_start":33,"line_end":33,"column_start":18,"column_end":24,"is_primary":false,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Encode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":4247,"byte_end":4326,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:33:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":826,"byte_end":832,"line_start":33,"line_end":33,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":826,"byte_end":832,"line_start":33,"line_end":33,"column_start":26,"column_end":32,"is_primary":false,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Decode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":5647,"byte_end":5726,"line_start":175,"line_end":175,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:33:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":869,"byte_end":882,"line_start":33,"line_end":33,"column_start":69,"column_end":82,"is_primary":true,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":69,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":869,"byte_end":882,"line_start":33,"line_end":33,"column_start":69,"column_end":82,"is_primary":false,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":69,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(MaxEncodedLen)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":11911,"byte_end":11999,"line_start":381,"line_end":381,"column_start":1,"column_end":89,"is_primary":false,"text":[{"text":"pub fn derive_max_encoded_len(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:33:69\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `MaxEncodedLen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":649,"byte_end":655,"line_start":26,"line_end":26,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":649,"byte_end":655,"line_start":26,"line_end":26,"column_start":18,"column_end":24,"is_primary":false,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Encode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":4247,"byte_end":4326,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:26:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":657,"byte_end":663,"line_start":26,"line_end":26,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":657,"byte_end":663,"line_start":26,"line_end":26,"column_start":26,"column_end":32,"is_primary":false,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Decode)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":5647,"byte_end":5726,"line_start":175,"line_end":175,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:26:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":706,"byte_end":719,"line_start":26,"line_end":26,"column_start":75,"column_end":88,"is_primary":true,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":75,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":706,"byte_end":719,"line_start":26,"line_end":26,"column_start":75,"column_end":88,"is_primary":false,"text":[{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":75,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(MaxEncodedLen)]","def_site_span":{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-derive-3.6.12/src/lib.rs","byte_start":11911,"byte_end":11999,"line_start":381,"line_end":381,"column_start":1,"column_end":89,"is_primary":false,"text":[{"text":"pub fn derive_max_encoded_len(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/shawntabrizi/Documents/GitHub/substrate-collectables-workshop/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:26:75\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `MaxEncodedLen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Error<T>: frame_support::pallet_prelude::Decode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3061,"byte_end":3069,"line_start":93,"line_end":93,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\tpub enum Error<T> {","highlight_start":11,"highlight_end":19}],"label":"the trait `WrapperTypeDecode` is not implemented for `pallet::Error<T>`, which is required by `pallet::Error<T>: frame_support::pallet_prelude::Decode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `frame_support::pallet_prelude::Decode`:\n  bool\n  i8\n  i16\n  i32\n  i64\n  i128\n  u8\n  u16\nand 271 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Error<T>` to implement `frame_support::pallet_prelude::Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PalletError`","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/traits/error.rs","byte_start":1368,"byte_end":1374,"line_start":32,"line_end":32,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"pub trait PalletError: Encode + Decode {","highlight_start":33,"highlight_end":39}],"label":"required by this bound in `PalletError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Error<T>: frame_support::pallet_prelude::Decode` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:93:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Error<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `pallet::Error<T>`, which is required by `pallet::Error<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `frame_support::pallet_prelude::Decode`:\u001b[0m\n\u001b[0m             bool\u001b[0m\n\u001b[0m             i8\u001b[0m\n\u001b[0m             i16\u001b[0m\n\u001b[0m             i32\u001b[0m\n\u001b[0m             i64\u001b[0m\n\u001b[0m             i128\u001b[0m\n\u001b[0m             u8\u001b[0m\n\u001b[0m             u16\u001b[0m\n\u001b[0m           and 271 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Error<T>` to implement `frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PalletError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/traits/error.rs:32:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PalletError: Encode + Decode {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PalletError`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Error<T>: frame_support::pallet_prelude::Encode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3061,"byte_end":3069,"line_start":93,"line_end":93,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"\tpub enum Error<T> {","highlight_start":11,"highlight_end":19}],"label":"the trait `WrapperTypeEncode` is not implemented for `pallet::Error<T>`, which is required by `pallet::Error<T>: frame_support::pallet_prelude::Encode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `frame_support::pallet_prelude::Encode`:\n  bool\n  i8\n  i16\n  i32\n  i64\n  i128\n  u8\n  u16\nand 290 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Error<T>` to implement `frame_support::pallet_prelude::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PalletError`","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/traits/error.rs","byte_start":1359,"byte_end":1365,"line_start":32,"line_end":32,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"pub trait PalletError: Encode + Decode {","highlight_start":24,"highlight_end":30}],"label":"required by this bound in `PalletError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Error<T>: frame_support::pallet_prelude::Encode` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:93:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Error<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `pallet::Error<T>`, which is required by `pallet::Error<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `frame_support::pallet_prelude::Encode`:\u001b[0m\n\u001b[0m             bool\u001b[0m\n\u001b[0m             i8\u001b[0m\n\u001b[0m             i16\u001b[0m\n\u001b[0m             i32\u001b[0m\n\u001b[0m             i64\u001b[0m\n\u001b[0m             i128\u001b[0m\n\u001b[0m             u8\u001b[0m\n\u001b[0m             u16\u001b[0m\n\u001b[0m           and 290 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Error<T>` to implement `frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PalletError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/traits/error.rs:32:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PalletError: Encode + Decode {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PalletError`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Call<T>: frame_support::pallet_prelude::Encode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3600,"byte_end":3604,"line_start":113,"line_end":113,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"\t#[pallet::call]","highlight_start":12,"highlight_end":16}],"label":"the trait `WrapperTypeEncode` is not implemented for `pallet::Call<T>`, which is required by `<pallet::Pallet<T> as Callable<T>>::RuntimeCall: Codec`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `frame_support::pallet_prelude::Encode`:\n  bool\n  i8\n  i16\n  i32\n  i64\n  i128\n  u8\n  u16\nand 290 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Call<T>` to implement `frame_support::pallet_prelude::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `Codec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::Callable::RuntimeCall`","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/dispatch.rs","byte_start":2157,"byte_end":2162,"line_start":51,"line_end":51,"column_start":45,"column_end":50,"is_primary":true,"text":[{"text":"\ttype RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;","highlight_start":45,"highlight_end":50}],"label":"required by this bound in `Callable::RuntimeCall`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Call<T>: frame_support::pallet_prelude::Encode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::call]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `pallet::Call<T>`, which is required by `<pallet::Pallet<T> as Callable<T>>::RuntimeCall: Codec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `frame_support::pallet_prelude::Encode`:\u001b[0m\n\u001b[0m              bool\u001b[0m\n\u001b[0m              i8\u001b[0m\n\u001b[0m              i16\u001b[0m\n\u001b[0m              i32\u001b[0m\n\u001b[0m              i64\u001b[0m\n\u001b[0m              i128\u001b[0m\n\u001b[0m              u8\u001b[0m\n\u001b[0m              u16\u001b[0m\n\u001b[0m            and 290 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Call<T>` to implement `frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `Codec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::Callable::RuntimeCall`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/dispatch.rs:51:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Callable::RuntimeCall`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Call<T>: frame_support::pallet_prelude::Decode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3600,"byte_end":3604,"line_start":113,"line_end":113,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"\t#[pallet::call]","highlight_start":12,"highlight_end":16}],"label":"the trait `WrapperTypeDecode` is not implemented for `pallet::Call<T>`, which is required by `<pallet::Pallet<T> as Callable<T>>::RuntimeCall: Codec`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `frame_support::pallet_prelude::Decode`:\n  bool\n  i8\n  i16\n  i32\n  i64\n  i128\n  u8\n  u16\nand 271 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Call<T>` to implement `frame_support::pallet_prelude::Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `Codec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::Callable::RuntimeCall`","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/dispatch.rs","byte_start":2157,"byte_end":2162,"line_start":51,"line_end":51,"column_start":45,"column_end":50,"is_primary":true,"text":[{"text":"\ttype RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;","highlight_start":45,"highlight_end":50}],"label":"required by this bound in `Callable::RuntimeCall`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Call<T>: frame_support::pallet_prelude::Decode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::call]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `pallet::Call<T>`, which is required by `<pallet::Pallet<T> as Callable<T>>::RuntimeCall: Codec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `frame_support::pallet_prelude::Decode`:\u001b[0m\n\u001b[0m              bool\u001b[0m\n\u001b[0m              i8\u001b[0m\n\u001b[0m              i16\u001b[0m\n\u001b[0m              i32\u001b[0m\n\u001b[0m              i64\u001b[0m\n\u001b[0m              i128\u001b[0m\n\u001b[0m              u8\u001b[0m\n\u001b[0m              u16\u001b[0m\n\u001b[0m            and 271 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Call<T>` to implement `frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `Codec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::Callable::RuntimeCall`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/dispatch.rs:51:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Callable::RuntimeCall`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":142,"line_end":142,"column_start":30,"column_end":33,"is_primary":true,"text":[{"text":"\t\t\tlet kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;","highlight_start":30,"highlight_end":33}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:142:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5112,"byte_end":5115,"line_start":160,"line_end":160,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tlet mut kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;","highlight_start":34,"highlight_end":37}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:160:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5289,"byte_end":5295,"line_start":165,"line_end":165,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tKitties::<T>::insert(kitty_id, kitty);","highlight_start":18,"highlight_end":24}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:165:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Kitties::<T>::insert(kitty_id, kitty);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `contains_key` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":7210,"byte_end":7222,"line_start":230,"line_end":230,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"\t\t\tensure!(!Kitties::<T>::contains_key(kitty.dna), Error::<T>::DuplicateKitty);","highlight_start":27,"highlight_end":39}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `contains_key` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:230:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ensure!(!Kitties::<T>::contains_key(kitty.dna), Error::<T>::DuplicateKitty);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":7614,"byte_end":7620,"line_start":241,"line_end":241,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tKitties::<T>::insert(kitty.dna, kitty);","highlight_start":18,"highlight_end":24}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:241:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Kitties::<T>::insert(kitty.dna, kitty);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":8037,"byte_end":8040,"line_start":254,"line_end":254,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tlet mut kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;","highlight_start":34,"highlight_end":37}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:254:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":8780,"byte_end":8786,"line_start":276,"line_end":276,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tKitties::<T>::insert(kitty_id, kitty);","highlight_start":18,"highlight_end":24}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:276:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Kitties::<T>::insert(kitty_id, kitty);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":9208,"byte_end":9211,"line_start":292,"line_end":292,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tlet mut kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;","highlight_start":34,"highlight_end":37}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:292:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut kitty = Kitties::<T>::get(kitty_id).ok_or(Error::<T>::NoKitty)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":10487,"byte_end":10493,"line_start":330,"line_end":330,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tKitties::<T>::insert(kitty_id, kitty);","highlight_start":18,"highlight_end":24}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":928,"byte_end":955,"line_start":35,"line_end":35,"column_start":2,"column_end":29,"is_primary":false,"text":[{"text":"\tpub struct Kitty<T: Config> {","highlight_start":2,"highlight_end":29}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs","byte_start":2790,"byte_end":2812,"line_start":76,"line_end":76,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OptionQuery;","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\nframe_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":5760,"byte_end":5833,"line_start":178,"line_end":178,"column_start":2,"column_end":75,"is_primary":true,"text":[{"text":"\tpub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {","highlight_start":2,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":7019,"byte_end":7174,"line_start":211,"line_end":214,"column_start":2,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":71},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut QueryKind::Query) -> Result<R, E>,","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":8105,"byte_end":8264,"line_start":238,"line_end":241,"column_start":2,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>","highlight_start":2,"highlight_end":78},{"text":"\twhere","highlight_start":1,"highlight_end":7},{"text":"\t\tKeyArg: EncodeLike<Key>,","highlight_start":1,"highlight_end":27},{"text":"\t\tF: FnOnce(&mut Option<Value>) -> Result<R, E>,","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs","byte_start":10796,"byte_end":10914,"line_start":314,"line_end":316,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(","highlight_start":2,"highlight_end":85},{"text":"\t\tkey: KeyArg,","highlight_start":1,"highlight_end":15},{"text":"\t) -> Option<Value> {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`Kitty<T>: FullCodec`\n`Kitty<T>: FullEncode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: EncodeLike`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Encode`\nwhich is required by `Kitty<T>: FullCodec`\n`Kitty<T>: frame_support::pallet_prelude::Decode`\nwhich is required by `Kitty<T>: FullCodec`\n`OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":6139,"byte_end":6155,"line_start":220,"line_end":220,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub trait Encode {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":8143,"byte_end":8166,"line_start":289,"line_end":289,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"pub trait Decode: Sized {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10143,"byte_end":10184,"line_start":341,"line_end":341,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub trait FullEncode: Encode + EncodeLike {}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10369,"byte_end":10409,"line_start":346,"line_end":346,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub trait FullCodec: Decode + FullEncode {}","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs","byte_start":2713,"byte_end":2767,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageKitties<T>, Blake2_128Concat, [u8; 16], Kitty<T>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:330:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Kitty<T: Config> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Kitties::<T>::insert(kitty_id, kitty);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/mod.rs:76:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OptionQuery;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_get\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::try_mutate_exists\u001b[0m\n\u001b[0m      frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::migrate_key\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/frame-support-34.0.0/src/storage/types/map.rs:178:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub fn try_get<KeyArg: EncodeLike<Key>>(key: KeyArg) -> Result<Value, ()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut QueryKind::Query) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_mutate_exists<KeyArg, R, E, F>(key: KeyArg, f: F) -> Result<R, E>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        KeyArg: EncodeLike<Key>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: FnOnce(&mut Option<Value>) -> Result<R, E>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn migrate_key<OldHasher: crate::hash::StorageHasher, KeyArg: EncodeLike<Key>>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        key: KeyArg,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Option<Value> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|______________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: FullEncode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `Kitty<T>: frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m            which is required by `Kitty<T>: FullCodec`\u001b[0m\n\u001b[0m            `OptionQuery: QueryKindTrait<Kitty<T>, GetDefault>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `frame_support::pallet_prelude::Encode`, `frame_support::pallet_prelude::Decode`, `FullEncode`, `FullCodec`,  and `EncodeLike` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:220:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Encode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Decode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullEncode: Encode + EncodeLike {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FullCodec: Decode + FullEncode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Kitty<T>: WrapperTypeDecode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":352,"byte_end":1402,"line_start":18,"line_end":50,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"\t#[pallet::pallet]","highlight_start":12,"highlight_end":19},{"text":"\tpub struct Pallet<T>(_);","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// Allows easy access our Pallet's `Balance` type. Comes from `Fungible` interface.","highlight_start":1,"highlight_end":85},{"text":"\ttype BalanceOf<T> =","highlight_start":1,"highlight_end":21},{"text":"\t\t<<T as Config>::NativeBalance as Inspect<<T as frame_system::Config>::AccountId>>::Balance;","highlight_start":1,"highlight_end":94},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// The Sex type used in the `Kitty` struct","highlight_start":1,"highlight_end":44},{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":1,"highlight_end":90},{"text":"\tpub enum Sex {","highlight_start":1,"highlight_end":16},{"text":"\t\tMale,","highlight_start":1,"highlight_end":8},{"text":"\t\tFemale,","highlight_start":1,"highlight_end":10},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// Struct for holding kitty information","highlight_start":1,"highlight_end":41},{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":1,"highlight_end":90},{"text":"\t#[scale_info(skip_type_params(T))]","highlight_start":1,"highlight_end":36},{"text":"\tpub struct Kitty<T: Config> {","highlight_start":1,"highlight_end":31},{"text":"\t\t// Using 16 bytes to represent a kitty DNA","highlight_start":1,"highlight_end":45},{"text":"\t\tpub dna: [u8; 16],","highlight_start":1,"highlight_end":21},{"text":"\t\t// `None` assumes not for sale","highlight_start":1,"highlight_end":33},{"text":"\t\tpub price: Option<BalanceOf<T>>,","highlight_start":1,"highlight_end":35},{"text":"\t\tpub sex: Sex,","highlight_start":1,"highlight_end":16},{"text":"\t\tpub owner: T::AccountId,","highlight_start":1,"highlight_end":27},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t/// Keeps track of the number of kitties in existence.","highlight_start":1,"highlight_end":56},{"text":"\t#[pallet::storage]","highlight_start":1,"highlight_end":20},{"text":"\tpub(super) type CountForKitties<T: Config> = StorageValue<Value = u64, QueryKind = ValueQuery>;","highlight_start":1,"highlight_end":97},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t/// Maps the kitty struct to the kitty DNA.","highlight_start":1,"highlight_end":45},{"text":"\t#[pallet::storage]","highlight_start":1,"highlight_end":20},{"text":"\tpub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeDecode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: PartialStorageInfoTrait`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Box<T>\n  frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\n  Rc<T>\n  Arc<T>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `frame_support::pallet_prelude::Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `PartialStorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Kitty<T>: WrapperTypeDecode` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Allows easy access our Pallet's `Balance` type. Comes from `Fungible` interface.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: PartialStorageInfoTrait`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m             Box<T>\u001b[0m\n\u001b[0m             frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\u001b[0m\n\u001b[0m             Rc<T>\u001b[0m\n\u001b[0m             Arc<T>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `PartialStorageInfoTrait`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Kitty<T>: EncodeLike` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":352,"byte_end":1402,"line_start":18,"line_end":50,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"\t#[pallet::pallet]","highlight_start":12,"highlight_end":19},{"text":"\tpub struct Pallet<T>(_);","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// Allows easy access our Pallet's `Balance` type. Comes from `Fungible` interface.","highlight_start":1,"highlight_end":85},{"text":"\ttype BalanceOf<T> =","highlight_start":1,"highlight_end":21},{"text":"\t\t<<T as Config>::NativeBalance as Inspect<<T as frame_system::Config>::AccountId>>::Balance;","highlight_start":1,"highlight_end":94},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// The Sex type used in the `Kitty` struct","highlight_start":1,"highlight_end":44},{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":1,"highlight_end":90},{"text":"\tpub enum Sex {","highlight_start":1,"highlight_end":16},{"text":"\t\tMale,","highlight_start":1,"highlight_end":8},{"text":"\t\tFemale,","highlight_start":1,"highlight_end":10},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// Struct for holding kitty information","highlight_start":1,"highlight_end":41},{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":1,"highlight_end":90},{"text":"\t#[scale_info(skip_type_params(T))]","highlight_start":1,"highlight_end":36},{"text":"\tpub struct Kitty<T: Config> {","highlight_start":1,"highlight_end":31},{"text":"\t\t// Using 16 bytes to represent a kitty DNA","highlight_start":1,"highlight_end":45},{"text":"\t\tpub dna: [u8; 16],","highlight_start":1,"highlight_end":21},{"text":"\t\t// `None` assumes not for sale","highlight_start":1,"highlight_end":33},{"text":"\t\tpub price: Option<BalanceOf<T>>,","highlight_start":1,"highlight_end":35},{"text":"\t\tpub sex: Sex,","highlight_start":1,"highlight_end":16},{"text":"\t\tpub owner: T::AccountId,","highlight_start":1,"highlight_end":27},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t/// Keeps track of the number of kitties in existence.","highlight_start":1,"highlight_end":56},{"text":"\t#[pallet::storage]","highlight_start":1,"highlight_end":20},{"text":"\tpub(super) type CountForKitties<T: Config> = StorageValue<Value = u64, QueryKind = ValueQuery>;","highlight_start":1,"highlight_end":97},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t/// Maps the kitty struct to the kitty DNA.","highlight_start":1,"highlight_end":45},{"text":"\t#[pallet::storage]","highlight_start":1,"highlight_end":20},{"text":"\tpub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;","highlight_start":1,"highlight_end":25}],"label":"the trait `EncodeLike` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: PartialStorageInfoTrait`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  <bool as EncodeLike>\n  <i8 as EncodeLike>\n  <i16 as EncodeLike>\n  <i32 as EncodeLike>\n  <i64 as EncodeLike>\n  <i128 as EncodeLike>\n  <u8 as EncodeLike>\n  <u16 as EncodeLike>\nand 323 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `PartialStorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Kitty<T>: EncodeLike` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Allows easy access our Pallet's `Balance` type. Comes from `Fungible` interface.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: PartialStorageInfoTrait`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m             <bool as EncodeLike>\u001b[0m\n\u001b[0m             <i8 as EncodeLike>\u001b[0m\n\u001b[0m             <i16 as EncodeLike>\u001b[0m\n\u001b[0m             <i32 as EncodeLike>\u001b[0m\n\u001b[0m             <i64 as EncodeLike>\u001b[0m\n\u001b[0m             <i128 as EncodeLike>\u001b[0m\n\u001b[0m             <u8 as EncodeLike>\u001b[0m\n\u001b[0m             <u16 as EncodeLike>\u001b[0m\n\u001b[0m           and 323 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullEncode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `PartialStorageInfoTrait`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Kitty<T>: WrapperTypeEncode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":352,"byte_end":1402,"line_start":18,"line_end":50,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"\t#[pallet::pallet]","highlight_start":12,"highlight_end":19},{"text":"\tpub struct Pallet<T>(_);","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// Allows easy access our Pallet's `Balance` type. Comes from `Fungible` interface.","highlight_start":1,"highlight_end":85},{"text":"\ttype BalanceOf<T> =","highlight_start":1,"highlight_end":21},{"text":"\t\t<<T as Config>::NativeBalance as Inspect<<T as frame_system::Config>::AccountId>>::Balance;","highlight_start":1,"highlight_end":94},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// The Sex type used in the `Kitty` struct","highlight_start":1,"highlight_end":44},{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, Copy, RuntimeDebug, TypeInfo, MaxEncodedLen)]","highlight_start":1,"highlight_end":90},{"text":"\tpub enum Sex {","highlight_start":1,"highlight_end":16},{"text":"\t\tMale,","highlight_start":1,"highlight_end":8},{"text":"\t\tFemale,","highlight_start":1,"highlight_end":10},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t// Struct for holding kitty information","highlight_start":1,"highlight_end":41},{"text":"\t#[derive(Clone, Encode, Decode, PartialEq, RuntimeDebug, TypeInfo, MaxEncodedLen, Copy)]","highlight_start":1,"highlight_end":90},{"text":"\t#[scale_info(skip_type_params(T))]","highlight_start":1,"highlight_end":36},{"text":"\tpub struct Kitty<T: Config> {","highlight_start":1,"highlight_end":31},{"text":"\t\t// Using 16 bytes to represent a kitty DNA","highlight_start":1,"highlight_end":45},{"text":"\t\tpub dna: [u8; 16],","highlight_start":1,"highlight_end":21},{"text":"\t\t// `None` assumes not for sale","highlight_start":1,"highlight_end":33},{"text":"\t\tpub price: Option<BalanceOf<T>>,","highlight_start":1,"highlight_end":35},{"text":"\t\tpub sex: Sex,","highlight_start":1,"highlight_end":16},{"text":"\t\tpub owner: T::AccountId,","highlight_start":1,"highlight_end":27},{"text":"\t}","highlight_start":1,"highlight_end":3},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t/// Keeps track of the number of kitties in existence.","highlight_start":1,"highlight_end":56},{"text":"\t#[pallet::storage]","highlight_start":1,"highlight_end":20},{"text":"\tpub(super) type CountForKitties<T: Config> = StorageValue<Value = u64, QueryKind = ValueQuery>;","highlight_start":1,"highlight_end":97},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t/// Maps the kitty struct to the kitty DNA.","highlight_start":1,"highlight_end":45},{"text":"\t#[pallet::storage]","highlight_start":1,"highlight_end":20},{"text":"\tpub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeEncode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: PartialStorageInfoTrait`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  Box<T>\n  bytes::bytes::Bytes\n  Cow<'a, T>\n  scale_info::parity_scale_codec::Ref<'a, T, U>\n  frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\n  Rc<T>\n  Arc<T>\n  Vec<T>\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `frame_support::pallet_prelude::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `PartialStorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Kitty<T>: WrapperTypeEncode` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Allows easy access our Pallet's `Balance` type. Comes from `Fungible` interface.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: PartialStorageInfoTrait`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m             Box<T>\u001b[0m\n\u001b[0m             bytes::bytes::Bytes\u001b[0m\n\u001b[0m             Cow<'a, T>\u001b[0m\n\u001b[0m             scale_info::parity_scale_codec::Ref<'a, T, U>\u001b[0m\n\u001b[0m             frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\u001b[0m\n\u001b[0m             Rc<T>\u001b[0m\n\u001b[0m             Arc<T>\u001b[0m\n\u001b[0m             Vec<T>\u001b[0m\n\u001b[0m           and 3 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullEncode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `PartialStorageInfoTrait`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `encode` exists for enum `Error<T>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3044,"byte_end":3049,"line_start":92,"line_end":92,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"\t#[pallet::error]","highlight_start":12,"highlight_end":17}],"label":"method cannot be called on `Error<T>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":3052,"byte_end":3069,"line_start":93,"line_end":93,"column_start":2,"column_end":19,"is_primary":false,"text":[{"text":"\tpub enum Error<T> {","highlight_start":2,"highlight_end":19}],"label":"method `encode` not found for this enum because it doesn't satisfy `<pallet::Error<T> as Deref>::Target = _`, `_: Encode` or `pallet::Error<T>: WrapperTypeEncode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`<pallet::Error<T> as Deref>::Target = _`\nwhich is required by `pallet::Error<T>: frame_support::pallet_prelude::Encode`\n`pallet::Error<T>: WrapperTypeEncode`\nwhich is required by `pallet::Error<T>: frame_support::pallet_prelude::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs","byte_start":10767,"byte_end":10801,"line_start":356,"line_end":356,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `encode`, perhaps you need to implement one of them:\ncandidate #1: `frame_support::pallet_prelude::Encode`\ncandidate #2: `base64ct::encoding::Encoding`\ncandidate #3: `der::encode::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `encode` exists for enum `Error<T>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:92:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::error]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Error<T>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Error<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `encode` not found for this enum because it doesn't satisfy `<pallet::Error<T> as Deref>::Target = _`, `_: Encode` or `pallet::Error<T>: WrapperTypeEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `<pallet::Error<T> as Deref>::Target = _`\u001b[0m\n\u001b[0m            which is required by `pallet::Error<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            `pallet::Error<T>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `pallet::Error<T>: frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shawntabrizi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parity-scale-codec-3.6.12/src/codec.rs:356:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is implemented and in scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following traits define an item `encode`, perhaps you need to implement one of them:\u001b[0m\n\u001b[0m            candidate #1: `frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m            candidate #2: `base64ct::encoding::Encoding`\u001b[0m\n\u001b[0m            candidate #3: `der::encode::Encode`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Kitty<T>: WrapperTypeDecode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1369,"byte_end":1402,"line_start":49,"line_end":50,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"\t#[pallet::storage]","highlight_start":12,"highlight_end":20},{"text":"\tpub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeDecode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: StorageEntryMetadataBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Box<T>\n  frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\n  Rc<T>\n  Arc<T>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `frame_support::pallet_prelude::Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Kitty<T>: WrapperTypeDecode` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:49:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m             Box<T>\u001b[0m\n\u001b[0m             frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\u001b[0m\n\u001b[0m             Rc<T>\u001b[0m\n\u001b[0m             Arc<T>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `frame_support::pallet_prelude::Decode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Kitty<T>: EncodeLike` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1369,"byte_end":1402,"line_start":49,"line_end":50,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"\t#[pallet::storage]","highlight_start":12,"highlight_end":20},{"text":"\tpub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;","highlight_start":1,"highlight_end":25}],"label":"the trait `EncodeLike` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: StorageEntryMetadataBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  <bool as EncodeLike>\n  <i8 as EncodeLike>\n  <i16 as EncodeLike>\n  <i32 as EncodeLike>\n  <i64 as EncodeLike>\n  <i128 as EncodeLike>\n  <u8 as EncodeLike>\n  <u16 as EncodeLike>\nand 323 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Kitty<T>: EncodeLike` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:49:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m             <bool as EncodeLike>\u001b[0m\n\u001b[0m             <i8 as EncodeLike>\u001b[0m\n\u001b[0m             <i16 as EncodeLike>\u001b[0m\n\u001b[0m             <i32 as EncodeLike>\u001b[0m\n\u001b[0m             <i64 as EncodeLike>\u001b[0m\n\u001b[0m             <i128 as EncodeLike>\u001b[0m\n\u001b[0m             <u8 as EncodeLike>\u001b[0m\n\u001b[0m             <u16 as EncodeLike>\u001b[0m\n\u001b[0m           and 323 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullEncode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Kitty<T>: WrapperTypeEncode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1369,"byte_end":1402,"line_start":49,"line_end":50,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"\t#[pallet::storage]","highlight_start":12,"highlight_end":20},{"text":"\tpub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeEncode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: StorageEntryMetadataBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  Box<T>\n  bytes::bytes::Bytes\n  Cow<'a, T>\n  scale_info::parity_scale_codec::Ref<'a, T, U>\n  frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\n  Rc<T>\n  Arc<T>\n  Vec<T>\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `frame_support::pallet_prelude::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Kitty<T>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Kitty<T>: WrapperTypeEncode` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:49:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(super) type Kitties<T: Config> = StorageMap<Key = [u8; 16], Value = Kitty<T>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|___________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `Kitty<T>`, which is required by `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>: StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m             Box<T>\u001b[0m\n\u001b[0m             bytes::bytes::Bytes\u001b[0m\n\u001b[0m             Cow<'a, T>\u001b[0m\n\u001b[0m             scale_info::parity_scale_codec::Ref<'a, T, U>\u001b[0m\n\u001b[0m             frame_support::sp_runtime::sp_application_crypto::sp_core::Bytes\u001b[0m\n\u001b[0m             Rc<T>\u001b[0m\n\u001b[0m             Arc<T>\u001b[0m\n\u001b[0m             Vec<T>\u001b[0m\n\u001b[0m           and 3 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `frame_support::pallet_prelude::Encode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullEncode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Kitty<T>` to implement `FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `frame_support::pallet_prelude::StorageMap<_GeneratedPrefixForStorageKitties<T>, frame_support::Blake2_128Concat, [u8; 16], Kitty<T>>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 32 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 32 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
